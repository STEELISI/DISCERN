- hosts: all
  become: true
  tasks:
    - name: Create discern group
      ansible.builtin.group:
        name: "{{ discern_group }}"
        state: present

    - name: Add users to discern group
      ansible.builtin.user:
        name: "{{ item }}"
        group: "{{ discern_group }}"
        groups: "{{ discern_group }}"
        append: yes
      loop: "{{ discern_members }}"

    - name: Reset SSH connection to allow group update
      ansible.builtin.meta: reset_connection

    - name: Install discern public SSH key into authorized_keys
      ansible.posix.authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ lookup('file', discern_key.public) }}"
      loop: "{{ discern_members }}"

    - name: Install discern private SSH key into SSH directory
      ansible.builtin.copy:
        src: "{{ discern_key.private }}"
        dest: "/home/{{ item }}/.ssh/id_rsa"
        mode: 0600
        owner: "{{ item }}"
      loop: "{{ discern_members }}"
 
- hosts: masters
  tasks:
    - name: Add docker GPG apt key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      become: true

    - name: Add docker repository
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/debian bullseye stable
        state: present
      become: true

    - name: Update apt and install software
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - git
        update_cache: yes
      become: true

    - name: Create byob dir
      ansible.builtin.file:
        path: "{{ byob_parent }}"
        state: directory
        mode: '0775'
        owner: "{{ ansible_user_id }}"
        group: "{{ discern_group }}"
      become: true

    - name: Determine if byob clone exists
      ansible.builtin.stat:
        path: "{{ byob_path }}"
      register: byob_stat

    - name: Download byob
      ansible.builtin.git:
        repo: "{{ byob_loc }}"
        dest: "{{ byob_path }}"
        version: "{{ byob_ref }}"
      when: not byob_stat.stat.exists

    - name: Install prerequisites
      ansible.builtin.apt:
        pkg:
          - python3
          - python3-pip
          - python3-opencv
          - python3-dev
          - cmake
          - build-essential
          - ca-certificates
          - curl
          - gnupg
      become: true

    - name: Install pip dependencies
      ansible.builtin.pip:
        name:
          - pip
          - setuptools
          - wheel
          - numpy
      become: true

    - name: Install pip dependencies from requirements.txt
      ansible.builtin.pip:
        requirements: "{{ byob_path }}/{{ item }}/requirements.txt"
      with_items:
        - byob
        - web-gui
      become: true

    - name: Build docker GUI images (this may take awhile ...)
      vars:
        images:
          - name: nix-amd64
            dockerfile: Dockerfile-py3-amd64
          - name: nix-i386
            dockerfile: Dockerfile-py3-i386
          - name: win-x32
            dockerfile: Dockerfile-py3-win32
      community.docker.docker_image:
        name: "{{ item.name }}"
        source: build
        state: present
        build:
          path: "{{ byob_path }}/web-gui/docker-pyinstaller"
          dockerfile: "{{ item.dockerfile }}"
      loop:
        "{{ images | flatten(levels=1) }}"

    - name: Restart machine
      ansible.builtin.reboot:
      become: true
